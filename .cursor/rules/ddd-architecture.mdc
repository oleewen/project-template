---
description:
globs:
alwaysApply: false
---
# DDD架构规范

## 领域模型规范

### 1. 实体（Entity）
- 位于domain模块的model包下
- 必须包含唯一标识
- 实现equals和hashCode方法
- 使用充血模型，包含业务行为
- 示例：[Order.java](mdc:template/src/main/resources/archetype-resources/__artifactId__-domain/src/main/java/__packageInPathFormat__/order/domain/model/Order.java)

### 2. 值对象（Value Object）
- 位于domain模块的model包下
- 不可变对象
- 没有唯一标识
- 基于属性值判断相等性
- 示例：[Address.java](mdc:template/src/main/resources/archetype-resources/__artifactId__-domain/src/main/java/__packageInPathFormat__/order/domain/model/Address.java)

### 3. 聚合（Aggregate）
- 以聚合根实体为核心
- 确保业务完整性
- 通过聚合根管理生命周期
- 跨聚合使用领域事件通信

### 4. 仓储（Repository）
- 位于domain模块的repository包下
- 定义仓储接口
- 在infrastructure层实现
- 示例：[OrderRepository.java](mdc:template/src/main/resources/archetype-resources/__artifactId__-domain/src/main/java/__packageInPathFormat__/order/domain/repository/OrderRepository.java)

### 5. 领域服务（Domain Service）
- 位于domain模块的service包下
- 处理跨实体的业务逻辑
- 无状态
- 示例：[OrderDomainService.java](mdc:template/src/main/resources/archetype-resources/__artifactId__-domain/src/main/java/__packageInPathFormat__/order/domain/service/OrderDomainService.java)

## 应用层规范

### 1. 应用服务
- 位于application模块的service包下
- 编排领域对象
- 处理事务
- 不包含业务逻辑

### 2. 命令（Command）
- 位于application模块的command包下
- 表示用户意图
- 包含执行操作所需数据
- 命名使用动词+名词

### 3. 查询（Query）
- 位于application模块的query包下
- 专门处理查询需求
- 可以直接访问基础设施层
- 返回DTO对象

## 基础设施层规范

### 1. 数据访问
- 位于infrastructure模块的dao包下
- 实现仓储接口
- 处理ORM映射
- 管理数据库事务

### 2. 防腐层
- 调用外部服务时使用
- 转换外部模型
- 处理异常转换
- 实现领域接口

## 接口层规范

### 1. DTO对象
- 位于api模块的dto包下
- 用于数据传输
- 避免暴露领域模型
- 根据接口需求设计

### 2. 接口定义
- 位于api模块
- 使用接口声明服务
- 定义清晰的入参和出参
- 使用统一的响应格式
